// Перепишіть функцію, використовуючи '?' або '||'
// важливість: 4
// Наступна функція повертає true, якщо параметр age більший за 18.

// Інакше вона запитує підтвердження через confirm і повертає його результат:

// function checkAge(age) {
//   if (age > 18) {
//     return true;
//   } else {
//     return confirm('Батьки дозволили?');
//   }
// }
// Перепишіть функцію, щоб вона робила теж саме, але без if і в один рядок.

// Зробіть два варіанти функції checkAge:

// Використовуючи оператор ?
// Використовуючи оператор АБО ||

// function checkAge(age) {
//   return age > 18 ? true : confirm('Батьки дозволили ? ');
// }
// console.log(checkAge(17));

// function checkAge(age) {
//   return age > 18 || confirm('Батьки дозволили ? ');
// }
// console.log(checkAge(22));
// -----------------------------------------------------------------------------
// Функція min(a, b)
// важливість: 1
// Напишіть функцію min(a, b), яка повертає менше з двох чисел a та b.
// Наприклад:
// min(2, 5) == 2
// min(3, -1) == -1
// min(1, 1) == 1

// function min(a, b) {
//   if (a < b) {
//     return a;
//   } else if (a > b) {
//     return b;
//   } else {
//     return a;
//   }
// }

// function min(a, b) {
//   return a < b ? a : b;
// }

// console.log(min(2, 5));
// console.log(min(3, -1));
// console.log(min(1, 1));
// ----------------------------------------------------------------------------------
// Функція pow(x, n)
// важливість: 4
// Напишіть функцію pow(x, n), яка повертає число x, піднесене до степеня n.
// Інакше кажучи, множить число x саме на себе n разів і повертає результат.

// pow(3, 2) = 3 * 3 = 9
// pow(3, 3) = 3 * 3 * 3 = 27
// pow(1, 100) = 1 * 1 * ...* 1 = 1
// Створіть сторінку, яка запитує x та n, а потім показує результат pow(x, n).

// Запустити демонстрацію

// P.S. В цій задачі функція повинна підтримувати лише натуральні значення n, тобто цілі числа, починаючи з 1.
// function pow(x, n) {
//   let result = x;
//   for (let i = 0; i < n; i++) {
//     result *= x;
//   }
//   return result;
// }
// // console.log(pow(2, 5));

// let x = prompt('x?', '');
// let n = prompt('n?', '');

// if (n < 1) {
//   alert(`Степінь ${n} не підтримується, використовуйте натуральне число`);
// } else {
//   alert(pow(x, n));
// }
// -------------------------------------------------------------------------------
// -------------------Стрілкові функції---------------------------------------------
// Перепишіть з використанням стрілкових функцій
// Замініть Функціональні Вирази на стрілкові функції у коді нижче:

// function ask(question, yes, no) {
//   if (confirm(question)) yes();
//   else no();
// }

// ask(
//   "Ви згодні?",
//   function() { alert("Ви погодились."); },
//   function() { alert("Ви скасували виконання."); }
// );

// function ask(question, yes, no) {
//   if (confirm(question)) yes();
//   else no();
// }

// ask(
//   'Ви згодні?',
//   () => alert('Ви погодились.'),
//   () => alert('Ви скасували виконання.')
// );

// ----------------------------------------------------------------------
// ----------------------------------------------------------------------
// Взаємодія
// Ми використовуємо браузер у ролі робочого середовища, тому для взаємодії з відвідувачами ми використовуємо функції:

// prompt(question, [default])
// Ставить питання question, а потім повертає те, що ввів відвідувач, або null, якщо відвідувач натиснув кнопку “Скасувати”.
// confirm(question)
// Ставить питання question і пропонує відвідувачу вибрати ОК або Скасувати. Вибір повертається як true/false.
// alert(message)
// Виводить повідомлення message.
// Всі ці функції показують модальне вікно; вони зупиняють виконання скрипту і не дають користувачеві
//  взаємодіяти зі сторінкою доки не буде надана відповідь.

// Наприклад:

// let userName = prompt("Ваше ім’я?", "Настя");
// let isBunWanted = confirm("Хочете булочку?");

// alert( "Відвідувач: " + userName ); // Настя
// alert( "Хоче булочку: " + isBunWanted ); // true
